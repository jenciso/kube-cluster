---
- name: kubeconfig | Download kubectl 
  get_url:
    url: "{{ kubernetes_install_url }}/kubectl"
    dest: /usr/bin/kubectl
    mode: 0755
    force: true


- name: kubeconfig | Create directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ kubernetes_dir }}"
    - "{{ kubernetes_kubelet_dir }}"
    - "{{ kubernetes_kube_proxy_dir }}"
    

- name: kubeconfig | node kubelet
  shell: >
    kubectl config set-cluster kubernetes-cluster
    --certificate-authority={{ kubernetes_dir }}/ca.pem 
    --embed-certs=true 
    --server=https://{{ api_domain }}
    --kubeconfig={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}.kubeconfig

    kubectl config set-credentials system:node:{{ inventory_hostname }}
    --client-certificate={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}.pem
    --client-key={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}-key.pem
    --embed-certs=true
    --kubeconfig={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}.kubeconfig

    kubectl config set-context default
    --cluster=kubernetes-cluster
    --user=system:node:{{ inventory_hostname }}
    --kubeconfig={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubernetes_kubelet_dir }}/{{ inventory_hostname }}.kubeconfig
  when: "'new_nodes' in group_names"



- name: kubeconfig | node kube-proxy 
  shell: >
    kubectl config set-cluster kubernetes-cluster 
    --certificate-authority={{ kubernetes_dir }}/ca.pem
    --embed-certs=true 
    --server=https://{{ api_domain }} 
    --kubeconfig={{ kubernetes_kube_proxy_dir }}/kube-proxy.kubeconfig

    kubectl config set-credentials system:kube-proxy
    --client-certificate={{ kubernetes_kube_proxy_dir }}/kube-proxy.pem
    --client-key={{ kubernetes_kube_proxy_dir }}/kube-proxy-key.pem
    --embed-certs=true
    --kubeconfig={{ kubernetes_kube_proxy_dir }}/kube-proxy.kubeconfig

    kubectl config set-context default
    --cluster=kubernetes-cluster
    --user=system:kube-proxy
    --kubeconfig={{ kubernetes_kube_proxy_dir }}/kube-proxy.kubeconfig
   
    kubectl config use-context default --kubeconfig={{ kubernetes_kube_proxy_dir }}/kube-proxy.kubeconfig
  when: "'new_nodes' in group_names"
